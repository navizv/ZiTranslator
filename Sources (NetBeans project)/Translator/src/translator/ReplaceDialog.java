/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ReplaceDialog.java
 *
 * Created on 31.03.2011, 16:52:01
 */
package translator;

import java.io.UnsupportedEncodingException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author ZaytsevID
 */
public class ReplaceDialog extends javax.swing.JDialog {

    String enc;
    String from;
    String to;
    byte[] fromB;
    byte[] toB;

    /** Creates new form ReplaceDialog */
    public ReplaceDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public void init() {
        charReplaceRadioButton.doClick();
        charFindRadioButton.doClick();
        getRootPane().setDefaultButton(replaceButton);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        findModeButtonGroup = new javax.swing.ButtonGroup();
        replaceModeButtonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        charFindTextField = new javax.swing.JTextField();
        codeFindTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        charReplaceTextField = new javax.swing.JTextField();
        codeReplaceTextField = new javax.swing.JTextField();
        codeReplaceRadioButton = new javax.swing.JRadioButton();
        charReplaceRadioButton = new javax.swing.JRadioButton();
        codeFindRadioButton = new javax.swing.JRadioButton();
        charFindRadioButton = new javax.swing.JRadioButton();
        replaceButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(translator.TranslatorApp.class).getContext().getResourceMap(ReplaceDialog.class);
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        charFindTextField.setName("charFindTextField"); // NOI18N

        codeFindTextField.setName("codeFindTextField"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        charReplaceTextField.setName("charReplaceTextField"); // NOI18N

        codeReplaceTextField.setName("codeReplaceTextField"); // NOI18N

        replaceModeButtonGroup1.add(codeReplaceRadioButton);
        codeReplaceRadioButton.setText(resourceMap.getString("codeReplaceRadioButton.text")); // NOI18N
        codeReplaceRadioButton.setName("codeReplaceRadioButton"); // NOI18N
        codeReplaceRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codeReplaceRadioButtonActionPerformed(evt);
            }
        });

        replaceModeButtonGroup1.add(charReplaceRadioButton);
        charReplaceRadioButton.setSelected(true);
        charReplaceRadioButton.setText(resourceMap.getString("charReplaceRadioButton.text")); // NOI18N
        charReplaceRadioButton.setName("charReplaceRadioButton"); // NOI18N
        charReplaceRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                charReplaceRadioButtonActionPerformed(evt);
            }
        });

        findModeButtonGroup.add(codeFindRadioButton);
        codeFindRadioButton.setText(resourceMap.getString("codeFindRadioButton.text")); // NOI18N
        codeFindRadioButton.setName("codeFindRadioButton"); // NOI18N
        codeFindRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codeFindRadioButtonActionPerformed(evt);
            }
        });

        findModeButtonGroup.add(charFindRadioButton);
        charFindRadioButton.setSelected(true);
        charFindRadioButton.setText(resourceMap.getString("charFindRadioButton.text")); // NOI18N
        charFindRadioButton.setName("charFindRadioButton"); // NOI18N
        charFindRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                charFindRadioButtonActionPerformed(evt);
            }
        });

        replaceButton.setText(resourceMap.getString("replaceButton.text")); // NOI18N
        replaceButton.setName("replaceButton"); // NOI18N
        replaceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                replaceButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(codeFindTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(codeFindRadioButton))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(charFindTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(charFindRadioButton)
                                .addGap(18, 18, 18)
                                .addComponent(replaceButton))))
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(codeReplaceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(codeReplaceRadioButton))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(charReplaceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(charReplaceRadioButton)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(charFindTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(charFindRadioButton)
                    .addComponent(replaceButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(codeFindTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(codeFindRadioButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(charReplaceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(charReplaceRadioButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(codeReplaceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(codeReplaceRadioButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void codeReplaceRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codeReplaceRadioButtonActionPerformed
        // TODO add your handling code here:
        codeReplaceTextField.setEnabled(true);
        charReplaceTextField.setEnabled(false);
        to = charReplaceTextField.getText();
        try {
            toB = to.getBytes(enc);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(ReplaceDialog.class.getName()).log(Level.SEVERE, null, ex);
        }
        codeReplaceTextField.setText(stringFromBytes(toB));
        codeReplaceTextField.requestFocusInWindow();
}//GEN-LAST:event_codeReplaceRadioButtonActionPerformed

    private void charReplaceRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_charReplaceRadioButtonActionPerformed
        // TODO add your handling code here:
        codeReplaceTextField.setEnabled(false);
        charReplaceTextField.setEnabled(true);
        toB = parseBytes(codeReplaceTextField.getText());
        try {
            to = new String(toB, enc);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(ReplaceDialog.class.getName()).log(Level.SEVERE, null, ex);
        }
        charReplaceTextField.setText(to);
        charReplaceTextField.requestFocusInWindow();
}//GEN-LAST:event_charReplaceRadioButtonActionPerformed

    private void codeFindRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codeFindRadioButtonActionPerformed
        // TODO add your handling code here:
        codeFindTextField.setEnabled(true);
        charFindTextField.setEnabled(false);
        from = charFindTextField.getText();
        try {
            fromB = from.getBytes(enc);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(ReplaceDialog.class.getName()).log(Level.SEVERE, null, ex);
        }
        codeFindTextField.setText(stringFromBytes(fromB));
        codeFindTextField.requestFocusInWindow();
}//GEN-LAST:event_codeFindRadioButtonActionPerformed

    private void charFindRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_charFindRadioButtonActionPerformed
        // TODO add your handling code here:
        codeFindTextField.setEnabled(false);
        charFindTextField.setEnabled(true);
        fromB = parseBytes(codeFindTextField.getText());
        try {
            from = new String(fromB, enc);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(ReplaceDialog.class.getName()).log(Level.SEVERE, null, ex);
        }
        charFindTextField.setText(from);
        charFindTextField.requestFocusInWindow();
}//GEN-LAST:event_charFindRadioButtonActionPerformed
    /** A return status code - returned if Cancel button has been pressed */
    public static final int RET_CANCEL = 0;
    /** A return status code - returned if OK button has been pressed */
    public static final int RET_OK = 1;
    private int returnStatus = RET_CANCEL;

    /** @return the return status of this dialog - one of RET_OK or RET_CANCEL */
    public int getReturnStatus() {
        return returnStatus;
    }

    private void doClose(int retStatus) {
        returnStatus = retStatus;
        setVisible(false);
        dispose();
    }
    private void replaceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_replaceButtonActionPerformed
        // TODO add your handling code here:
        if (charFindRadioButton.isSelected()) {
            from = charFindTextField.getText();
        } else {
            fromB = parseBytes(codeFindTextField.getText());
            try {
                from = new String(fromB, enc);
            } catch (UnsupportedEncodingException ex) {
                Logger.getLogger(ReplaceDialog.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        if (charReplaceRadioButton.isSelected()) {
            to = charReplaceTextField.getText();
        } else {
            toB = parseBytes(codeReplaceTextField.getText());
            try {
                to = new String(toB, enc);
            } catch (UnsupportedEncodingException ex) {
                Logger.getLogger(ReplaceDialog.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        doClose(RET_OK);
    }//GEN-LAST:event_replaceButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                ReplaceDialog dialog = new ReplaceDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton charFindRadioButton;
    private javax.swing.JTextField charFindTextField;
    private javax.swing.JRadioButton charReplaceRadioButton;
    private javax.swing.JTextField charReplaceTextField;
    private javax.swing.JRadioButton codeFindRadioButton;
    private javax.swing.JTextField codeFindTextField;
    private javax.swing.JRadioButton codeReplaceRadioButton;
    private javax.swing.JTextField codeReplaceTextField;
    private javax.swing.ButtonGroup findModeButtonGroup;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton replaceButton;
    private javax.swing.ButtonGroup replaceModeButtonGroup1;
    // End of variables declaration//GEN-END:variables

    private byte[] parseBytes(String text) {
        int len = text.length() / 2;
        byte[] res = new byte[len];
        for (int i = 0; i < len; i++) {
            String bt = text.substring(2 * i, 2 * i + 2);
            int tmp = Integer.parseInt(bt, 16);
            if (tmp < 128) {
                res[i] = (byte) tmp;
            } else {
                res[i] = (byte) (tmp - 256);
            }
        }
        return res;
    }

    private String stringFromBytes(byte[] b) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < b.length; i++) {
            String strq = Integer.toString((b[i] + 256) % 256, 16);
            if (strq.length() == 1) {
                strq = "0" + strq;
            }
            sb.append(strq);
        }
        return sb.toString();
    }

    void setEnc(String string) {
        enc = string;
    }
}
